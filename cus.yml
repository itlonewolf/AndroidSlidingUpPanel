# 定义连线手机进行ADB处理时，需要过滤的包名；
# 如果不使用Android的ADB功能，便不需要配置
package: com.sothree.slidinguppanel.demo

# 配置对于一行日志的正则表达式，目前支持正则出data、time、level、tag、process、thread、message
# 不过不一定要全部提供，至少需要提供一个message
# 如log-line-regex: 'message="(.\S*)"'
log-line-regex: 'data,time,level,tag,process,thread,message = "(.\S*) *(.\S*) *(\d*) *(\d*) *([A-Z]) *([^:]*): *(.*?)$"'

# 在Android的ADB的情况下，我们是使用adb logcat -v brief -v threadtime
# 一般情况下不需要adb-log-line-regex配置，我们已经有很完善的这块的正则，但是如果对这个需要特别定制便可以使用以下定制
# adb-log-line-regex: 'data,time,process,thread,level,tag,message="(.\S*) *(.\S*) *(\d*) *(\d*) *([A-Z]) *([^:]*): *(.*?)$"'

# 分割正则列表
# 可以提供多个正则表达式，对日志进行分割
separator-regex-list:
  # 对满足以下正则的那行日志开始进行分割，并且以([^\]]*)的内容作为分割的标题
  - 'call start Url\[([^\]]*)\]'

# 标签关键字
# 如果不提供tag-keyword-list将会显示所有日志
# 如果如下提供了tag-keyword-list将会过滤日志，只显示tag中包含了这里列出关键字的日志
tag-keyword-list:
  - 'DragableView'

# 内容转译表
# 如果日志message中由表中key开头，将会使用彩色的文字在该message开头加上表中的value
trans-msg-map:
  # 如这个例子:
  # 原message: 'filedownloader:lifecycle:over xxx'
  # 转译后: '| 任务结束 | filedownloader:lifecycle:over xxx' 其中的'任务结束'会使用彩色的文字显示
  'filedownloader:lifecycle:over': '任务结束'
  'fetch data with': '开始拉取'

# 标签转译表
# 如果日志tag中包含表中key开头，将会使用彩色背景的文字在该message开头加上表中的value
trans-tag-map:
  # 如这个例子:
  # 原输出: 'FileDownloader.DownloadTaskHunter  xxx'
  # 转译后: 'FileDownloader.DownloadTaskHunter [状态切换] xxx' 其中'[状态切换]'会使用彩色背景
  'DownloadTaskHunter': '[状态切换]'
  'ConnectTask': '[请求]'

# 隐藏消息列表
# 对以以下内容开头并且message长度小于100的内功进行灰色显示处理，在视觉上进行隐藏
hide-msg-list:
  # 这里案例因为心跳日志是非常频繁的日志，通常没有什么问题，因此将其着灰色
  - 'notify progress'
  - '~~~callback'

# 高亮列表
# 对message中的以下内容，背景进行彩色处理使其高亮
highlight-list:
  - 'Path['
  - 'Url['
  - 'Tag['
  - 'range['